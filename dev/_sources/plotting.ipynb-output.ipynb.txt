{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Quick introduction\n",
    "\n",
    "gliderpy can be installed with conda\n",
    "\n",
    "```\n",
    "conda install --channel conda-forge gliderpy\n",
    "```\n",
    "\n",
    "or pip\n",
    "\n",
    "```\n",
    "pip install gliderpy\n",
    "```\n",
    "\n",
    "gliderpy aims to make querying and downloading glider data easier.\n",
    "Here is how one would build a query using `erddapy`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-08T16:40:28.536763Z",
     "iopub.status.busy": "2020-10-08T16:40:28.535765Z",
     "iopub.status.idle": "2020-10-08T16:40:32.662283Z",
     "shell.execute_reply": "2020-10-08T16:40:32.661824Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>depth (m)</th>\n",
       "      <th>latitude (degrees_north)</th>\n",
       "      <th>longitude (degrees_east)</th>\n",
       "      <th>salinity (1)</th>\n",
       "      <th>temperature (Celsius)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time (UTC)</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>6.43</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.079258</td>\n",
       "      <td>20.5407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>7.82</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.095406</td>\n",
       "      <td>20.5071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>8.69</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.111920</td>\n",
       "      <td>20.4904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>9.54</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.126587</td>\n",
       "      <td>20.4897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>10.32</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.140717</td>\n",
       "      <td>20.4909</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           depth (m)  latitude (degrees_north)  \\\n",
       "time (UTC)                                                       \n",
       "2016-09-02 17:05:38+00:00       6.43                 41.120018   \n",
       "2016-09-02 17:05:38+00:00       7.82                 41.120018   \n",
       "2016-09-02 17:05:38+00:00       8.69                 41.120018   \n",
       "2016-09-02 17:05:38+00:00       9.54                 41.120018   \n",
       "2016-09-02 17:05:38+00:00      10.32                 41.120018   \n",
       "\n",
       "                           longitude (degrees_east)  salinity (1)  \\\n",
       "time (UTC)                                                          \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.079258   \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.095406   \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.111920   \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.126587   \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.140717   \n",
       "\n",
       "                           temperature (Celsius)  \n",
       "time (UTC)                                        \n",
       "2016-09-02 17:05:38+00:00                20.5407  \n",
       "2016-09-02 17:05:38+00:00                20.5071  \n",
       "2016-09-02 17:05:38+00:00                20.4904  \n",
       "2016-09-02 17:05:38+00:00                20.4897  \n",
       "2016-09-02 17:05:38+00:00                20.4909  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from erddapy import ERDDAP\n",
    "\n",
    "e = ERDDAP(\n",
    "    server=\"https://gliders.ioos.us/erddap\",\n",
    "    protocol=\"tabledap\",\n",
    "    response=\"csv\",\n",
    ")\n",
    "e.dataset_id = \"whoi_406-20160902T1700\"\n",
    "\n",
    "e.variables = [\n",
    "    \"depth\",\n",
    "    \"latitude\",\n",
    "    \"longitude\",\n",
    "    \"salinity\",\n",
    "    \"temperature\",\n",
    "    \"time\",\n",
    "]\n",
    "\n",
    "df = e.to_pandas(\n",
    "    index_col=\"time (UTC)\",\n",
    "    parse_dates=True,\n",
    ")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With gliderpy attain the same output as erddapy with fewer lines and a cleaner UI:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-08T16:40:32.666501Z",
     "iopub.status.busy": "2020-10-08T16:40:32.665828Z",
     "iopub.status.idle": "2020-10-08T16:40:33.238233Z",
     "shell.execute_reply": "2020-10-08T16:40:33.237822Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>depth (m)</th>\n",
       "      <th>latitude (degrees_north)</th>\n",
       "      <th>longitude (degrees_east)</th>\n",
       "      <th>salinity (1)</th>\n",
       "      <th>temperature (Celsius)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time (UTC)</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>6.43</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.079258</td>\n",
       "      <td>20.5407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>7.82</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.095406</td>\n",
       "      <td>20.5071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>8.69</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.111920</td>\n",
       "      <td>20.4904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>9.54</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.126587</td>\n",
       "      <td>20.4897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02 17:05:38+00:00</th>\n",
       "      <td>10.32</td>\n",
       "      <td>41.120018</td>\n",
       "      <td>-71.017118</td>\n",
       "      <td>32.140717</td>\n",
       "      <td>20.4909</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           depth (m)  latitude (degrees_north)  \\\n",
       "time (UTC)                                                       \n",
       "2016-09-02 17:05:38+00:00       6.43                 41.120018   \n",
       "2016-09-02 17:05:38+00:00       7.82                 41.120018   \n",
       "2016-09-02 17:05:38+00:00       8.69                 41.120018   \n",
       "2016-09-02 17:05:38+00:00       9.54                 41.120018   \n",
       "2016-09-02 17:05:38+00:00      10.32                 41.120018   \n",
       "\n",
       "                           longitude (degrees_east)  salinity (1)  \\\n",
       "time (UTC)                                                          \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.079258   \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.095406   \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.111920   \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.126587   \n",
       "2016-09-02 17:05:38+00:00                -71.017118     32.140717   \n",
       "\n",
       "                           temperature (Celsius)  \n",
       "time (UTC)                                        \n",
       "2016-09-02 17:05:38+00:00                20.5407  \n",
       "2016-09-02 17:05:38+00:00                20.5071  \n",
       "2016-09-02 17:05:38+00:00                20.4904  \n",
       "2016-09-02 17:05:38+00:00                20.4897  \n",
       "2016-09-02 17:05:38+00:00                20.4909  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from gliderpy.fetchers import GliderDataFetcher\n",
    "\n",
    "glider_grab = GliderDataFetcher()\n",
    "\n",
    "glider_grab.fetcher.dataset_id = \"whoi_406-20160902T1700\"\n",
    "df = glider_grab.to_pandas()\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One can also reduce the data on the server side by passing a geographic bounding box and time interval."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-08T16:40:33.244309Z",
     "iopub.status.busy": "2020-10-08T16:40:33.243399Z",
     "iopub.status.idle": "2020-10-08T16:40:33.345181Z",
     "shell.execute_reply": "2020-10-08T16:40:33.344432Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>depth (m)</th>\n",
       "      <th>latitude (degrees_north)</th>\n",
       "      <th>longitude (degrees_east)</th>\n",
       "      <th>salinity (1)</th>\n",
       "      <th>temperature (Celsius)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time (UTC)</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-09-20 01:52:37+00:00</th>\n",
       "      <td>5.12</td>\n",
       "      <td>40.997719</td>\n",
       "      <td>-70.946457</td>\n",
       "      <td>32.844220</td>\n",
       "      <td>19.5836</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-20 01:52:37+00:00</th>\n",
       "      <td>5.83</td>\n",
       "      <td>40.997719</td>\n",
       "      <td>-70.946457</td>\n",
       "      <td>32.788895</td>\n",
       "      <td>19.4810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-20 01:52:37+00:00</th>\n",
       "      <td>6.90</td>\n",
       "      <td>40.997719</td>\n",
       "      <td>-70.946457</td>\n",
       "      <td>32.543550</td>\n",
       "      <td>19.0221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-20 01:52:37+00:00</th>\n",
       "      <td>7.62</td>\n",
       "      <td>40.997719</td>\n",
       "      <td>-70.946457</td>\n",
       "      <td>32.582150</td>\n",
       "      <td>18.7567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-20 01:52:37+00:00</th>\n",
       "      <td>8.33</td>\n",
       "      <td>40.997719</td>\n",
       "      <td>-70.946457</td>\n",
       "      <td>32.714066</td>\n",
       "      <td>18.6578</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           depth (m)  latitude (degrees_north)  \\\n",
       "time (UTC)                                                       \n",
       "2016-09-20 01:52:37+00:00       5.12                 40.997719   \n",
       "2016-09-20 01:52:37+00:00       5.83                 40.997719   \n",
       "2016-09-20 01:52:37+00:00       6.90                 40.997719   \n",
       "2016-09-20 01:52:37+00:00       7.62                 40.997719   \n",
       "2016-09-20 01:52:37+00:00       8.33                 40.997719   \n",
       "\n",
       "                           longitude (degrees_east)  salinity (1)  \\\n",
       "time (UTC)                                                          \n",
       "2016-09-20 01:52:37+00:00                -70.946457     32.844220   \n",
       "2016-09-20 01:52:37+00:00                -70.946457     32.788895   \n",
       "2016-09-20 01:52:37+00:00                -70.946457     32.543550   \n",
       "2016-09-20 01:52:37+00:00                -70.946457     32.582150   \n",
       "2016-09-20 01:52:37+00:00                -70.946457     32.714066   \n",
       "\n",
       "                           temperature (Celsius)  \n",
       "time (UTC)                                        \n",
       "2016-09-20 01:52:37+00:00                19.5836  \n",
       "2016-09-20 01:52:37+00:00                19.4810  \n",
       "2016-09-20 01:52:37+00:00                19.0221  \n",
       "2016-09-20 01:52:37+00:00                18.7567  \n",
       "2016-09-20 01:52:37+00:00                18.6578  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "glider_grab = GliderDataFetcher()\n",
    "glider_grab.fetcher.dataset_id = \"whoi_406-20160902T1700\"\n",
    "glider_grab.query(38, 41, -72, -69, \"2016-09-20T01:00:00\", \"25th sept 2016\")\n",
    "\n",
    "df = glider_grab.to_pandas()\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One can query all datasets available."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-08T16:40:33.356029Z",
     "iopub.status.busy": "2020-10-08T16:40:33.355160Z",
     "iopub.status.idle": "2020-10-08T16:40:33.619482Z",
     "shell.execute_reply": "2020-10-08T16:40:33.620072Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "found 786 glider datasets on the server https://gliders.ioos.us/erddap\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array(['allDatasets', 'unit_4-20140910T1800', 'unit_191-20150711T2000',\n",
       "       'unit_191-20160710T2018', 'unit_595-20170713T1730-delayed',\n",
       "       'unit_595-20180804T0000-delayed', 'cp_335-20141006T2016',\n",
       "       'cp_335-20151013T0112', 'cp_335-20160404T1857',\n",
       "       'cp_335-20160527T2033', 'cp_335-20170116T1459',\n",
       "       'cp_336-20161011T0027', 'cp_336-20170116T1254',\n",
       "       'cp_336-20170817T1159', 'cp_336-20180126T0000',\n",
       "       'cp_336-20180724T1433', 'cp_339-20150112T0601',\n",
       "       'cp_339-20160121T1629', 'cp_339-20170116T2353',\n",
       "       'cp_339-20170606T0355', 'cp_339-20171029T0452',\n",
       "       'cp_339-20180126T0000', 'cp_340-20150506T0237',\n",
       "       'cp_340-20160121T1708', 'cp_340-20160809T0230',\n",
       "       'cp_374-20150509T0311', 'cp_374-20160529T0035',\n",
       "       'cp_374-20161011T0106', 'cp_376-20151012T2326',\n",
       "       'cp_376-20160121T1515', 'cp_376-20160527T2050',\n",
       "       'cp_376-20180724T1552', 'cp_379-20150509T1102',\n",
       "       'cp_379-20160121T1500', 'cp_379-20170116T1246',\n",
       "       'cp_380-20161011T2046', 'cp_380-20170607T0254',\n",
       "       'cp_380-20171101T0150', 'cp_380-20180126T0000',\n",
       "       'cp_387-20150111T1716', 'cp_387-20151014T0119',\n",
       "       'cp_387-20160404T1858', 'cp_387-20170419T0000',\n",
       "       'cp_387-20170419T2053', 'cp_388-20151022T1034',\n",
       "       'cp_388-20160809T1409', 'cp_388-20170116T1324',\n",
       "       'cp_389-20151013T0150', 'cp_389-20161011T2040',\n",
       "       'cp_389-20170419T0000', 'cp_389-20170419T2114',\n",
       "       'cp_389-20180724T1620', 'cp_564-20170817T1020',\n",
       "       'ga_364-20161101T0058', 'gi_484-20150817T1025',\n",
       "       'gi_484-20160709T1032', 'gi_485-20150817T1036',\n",
       "       'gi_493-20170809T1222', 'gi_495-20150817T1402',\n",
       "       'gp_363-20160630T0230', 'gp_365-20160627T1535',\n",
       "       'gp_514-20150602T1000', 'gp_515-20150602T0955',\n",
       "       'ru22-20130924T2010', 'ru23-20130305T2004', 'ru23-20130910T1701',\n",
       "       'ru23-20131017T1614', 'ru23-20140814T1239', 'ru23-20140916T1430',\n",
       "       'ru23-20151008T1604', 'ru01-20140104T1621', 'ru01-20140120T1444',\n",
       "       'ru01-20140123T1250', 'ru01-20140217T1244', 'ru05-20150105T1600',\n",
       "       'ru05-20150115T1443', 'ru05-20150201T2130', 'ru24-20130122T1943',\n",
       "       'ru24-20150105T1441', 'ru24-20150126T1315', 'clark-20130821T2130',\n",
       "       'ru24-20170117T1705', 'ru26d-20141225T1450',\n",
       "       'ud_134-20150105T1601', 'ud_134-20150122T1955',\n",
       "       'unit_191-20150105T1443', 'SG601-20200906T1631',\n",
       "       'SG636-20190911T1702', 'gichigami-20120510T1722',\n",
       "       'gichigami-20120619T1541', 'gichigami-20120820T2012',\n",
       "       'gichigami-20120913T1538', 'gichigami-20130628T2005',\n",
       "       'gichigami-20130813T1313', 'gichigami-20140703T1923',\n",
       "       'gichigami-20140807T1844', 'gichigami-20150722T1952',\n",
       "       'gichigami-20150902T1932', 'gichigami-20151005T1659',\n",
       "       'gichigami-20151030T1356', 'gichigami-20160504T1723',\n",
       "       'gichigami-20160809T1635', 'gichigami-20160908T1711',\n",
       "       'gichigami-20170509T1758', 'gichigami-20170621T0243',\n",
       "       'gichigami-20170703T1447', 'gichigami-20170714T1855',\n",
       "       'ru22-20140804T1632', 'ru22-20140825T1505', 'SG547-20160804T1912',\n",
       "       'SG609-20140719T1700', 'SG609-20150206T1720',\n",
       "       'SG609-20150715T1350', 'SG609-20160310T1412',\n",
       "       'SG609-20160721T1407', 'SG610-20140715T1400',\n",
       "       'SG610-20150206T1750', 'SG610-20150811T1630',\n",
       "       'SG610-20160804T1815', 'SG610-20170712T1421',\n",
       "       'SG630-20160721T1453', 'SG630-20170712T1447',\n",
       "       'SG635-20170714T1601', 'ru23-20121025T1944', 'ru28-20130717T1434',\n",
       "       'ru28-20130813T1436', 'ru28-20130912T1650', 'ru28-20140815T1405',\n",
       "       'unit_167-20130911T0027', 'Reveille-20180627T1500',\n",
       "       'SG609-20200719T1158', 'SG610-20180719T1146',\n",
       "       'SG610-20200714T1252', 'SG630-20180716T1220',\n",
       "       'SG630-20200719T1206', 'SG635-20180716T1248',\n",
       "       'SG635-20200719T1224', 'SG649-20180731T1418',\n",
       "       'SG649-20200715T1639', 'SG663-20190716T1159',\n",
       "       'SG663-20200715T1659', 'SG664-20190716T1218',\n",
       "       'SG664-20200714T1238', 'SG665-20190718T1155',\n",
       "       'SG665-20200718T1343', 'SG666-20190718T1206',\n",
       "       'SG667-20190815T1247', 'SG668-20190819T1217',\n",
       "       'SG669-20200717T1211', 'SG670-20191007T1328',\n",
       "       'Sverdrup-20180509T1742', 'Sverdrup-20190926T0000',\n",
       "       'Sverdrup-20200925T1200', 'ru24-20140104T1300',\n",
       "       'ru25d-20140104T1705', 'ru25d-20160121T0606',\n",
       "       'usf-sam-20190527T1200', 'mote-genie-20190617T1300',\n",
       "       'mote-genie-20190819T1600', 'mote-genie-20190925T1200',\n",
       "       'mote-genie-20200505T1200', 'mote-genie-20200615T1200',\n",
       "       'mote-genie-20200728T1200', 'ru29-20150623T1046',\n",
       "       'Stommel-20200813T1200', 'ru28-20140717T1432',\n",
       "       'blue-20150627T1242', 'blue-20160518T1525',\n",
       "       'pelagia-20200826T0000', 'ru05-20160202T2023',\n",
       "       'ru24-20160201T1252', 'ru26d-20160201T1313', 'sam-20200716T0000',\n",
       "       'sam-20200821T0000', 'ce_311-20180401T1321-delayed',\n",
       "       'ce_319-20151008T2255-delayed', 'ce_326-20181017T1655-delayed',\n",
       "       'ce_327-20180401T1431-delayed', 'ce_381-20171004T0024-delayed',\n",
       "       'clark-20150709T1803', 'franklin-20200729T0000',\n",
       "       'franklin-20200918T0000', 'ru31-20151028T1652',\n",
       "       'ru31-20160113T1728', 'ru28-20150818T1506', 'ru28-20150917T1300',\n",
       "       'ce_312-20150603T2152-delayed', 'ce_326-20160217T1655-delayed',\n",
       "       'gi_365-20200825T0829', 'ce_312-20190515T1750-delayed',\n",
       "       'sp007-20170427T1652', 'sp007-20200618T1527',\n",
       "       'sp010-20170707T1647', 'sp010-20180620T1455',\n",
       "       'sp022-20170209T1616', 'sp022-20170802T1414',\n",
       "       'sp022-20180124T1514', 'sp022-20180422T1229',\n",
       "       'sp022-20180912T1553', 'sp055-20150716T1359',\n",
       "       'sp062-20171116T1557', 'sp062-20190201T1350',\n",
       "       'sp062-20190925T1538', 'sp062-20200227T1647',\n",
       "       'sp062-20200824T1618', 'sp065-20151001T1507',\n",
       "       'sp065-20180310T1828', 'sp065-20181015T1349',\n",
       "       'sp065-20190517T1530', 'sp065-20191120T1543',\n",
       "       'sp065-20200506T1709', 'sp066-20151217T1624',\n",
       "       'sp066-20160818T1505', 'sp066-20170416T1744',\n",
       "       'sp066-20171129T1616', 'sp066-20180629T1411',\n",
       "       'sp066-20190301T1640', 'sp066-20190724T1532',\n",
       "       'sp066-20200123T1630', 'sp066-20200824T1631',\n",
       "       'sp069-20170907T1531', 'sp069-20180411T1516',\n",
       "       'sp069-20181109T1607', 'sp069-20200319T1317',\n",
       "       'usf-bass-20181129T1500', 'usf-bass-20190919T1200',\n",
       "       'usf-bass-20191022T1200', 'usf-gansett-20200211T1200',\n",
       "       'usf-gansett-20200519T1200', 'usf-gansett-20200813T1200',\n",
       "       'bass-20150706T151619Z', 'unit_308-20150701T222927Z',\n",
       "       'unit_540-20150701T181602Z', 'ce_311-20200708T1723',\n",
       "       'ce_312-20200705T1232', 'ce_327-20191021T0620',\n",
       "       'ce_381-20200705T1333', 'ce_386-20200917T1943',\n",
       "       'cp_336-20190516T2337', 'cp_339-20200302T1109',\n",
       "       'cp_339-20200613T2009', 'cp_340-20200926T0614',\n",
       "       'cp_376-20200302T0946', 'cp_376-20200819T1711',\n",
       "       'cp_379-20200302T0944', 'cp_379-20200819T1718',\n",
       "       'cp_380-20200613T2124', 'cp_388-20200613T2149',\n",
       "       'cp_514-20200613T2130', 'cp_583-20200613T2010',\n",
       "       'cp_583-20200819T1925', 'gi_515-20200815T1437',\n",
       "       'bass-20150827T1909', 'ce_247-20160510T0242-delayed',\n",
       "       'ce_311-20190703T1802-delayed', 'ce_319-20170410T2034-delayed',\n",
       "       'ce_320-20191012T0448-delayed', 'ce_327-20191021T0620-delayed',\n",
       "       'ce_384-20190503T2308-delayed', 'ce_384-20190808T2105-delayed',\n",
       "       'ce_384-20200708T1545-delayed', 'cp_336-20190408T0014-delayed',\n",
       "       'cp_339-20200302T1109-delayed', 'cp_340-20190927T1226-delayed',\n",
       "       'cp_340-20191213T0104-delayed', 'cp_376-20190618T2336-delayed',\n",
       "       'cp_376-20200302T0946-delayed', 'cp_379-20190618T2314-delayed',\n",
       "       'cp_379-20190927T1222-delayed', 'cp_379-20200302T0944-delayed',\n",
       "       'cp_380-20191212T2231-delayed', 'cp_387-20190408T0135-delayed',\n",
       "       'cp_388-20190618T2258-delayed', 'cp_388-20191212T2247-delayed',\n",
       "       'cp_514-20200302T0958-delayed', 'ud_476-20150917T1400',\n",
       "       'bios_minnie-20200206T1832', 'angus-20200319T0000',\n",
       "       'angus-20200421T0000', 'Stommel-20150805T0000Z',\n",
       "       'Sverdrup-20150822T1639', 'SG108-20130923T1728',\n",
       "       'SG187-20100716T1208', 'SG187-20110430T1450',\n",
       "       'SG187-20120912T1125', 'SG187-20140625T1330',\n",
       "       'Stommel-20160805T1512', 'Gichigami-20110629T1821',\n",
       "       'Gichigami-20111129T2109', 'gichigami-20110630T2049',\n",
       "       'gichigami-20110701T0123', 'gichigami-20110701T1556',\n",
       "       'gichigami-20110702T1048', 'gichigami-20110703T0859',\n",
       "       'gichigami-20110704T0352', 'gichigami-20110705T1936',\n",
       "       'gichigami-20110706T1754', 'gichigami-20110707T0056',\n",
       "       'sp010-20150409T1524', 'Murphy-20150809T1355',\n",
       "       'Murphy-20170426T1610', 'bios_jack-20200516T1457',\n",
       "       'bios_jack-20200605T1613', 'ce_386-20191121T1807-delayed',\n",
       "       'murphy-20160810T2233', 'sp001-20150111T2247',\n",
       "       'sp001-20160814T2313', 'sp001-20180715T0125',\n",
       "       'sp001-20191027T2329', 'sp006-20151214T0021',\n",
       "       'sp006-20170714T0047', 'sp006-20190204T0038',\n",
       "       'sp011-20140501T0000', 'sp011-20140923T0000',\n",
       "       'sp011-20150427T1749', 'sp011-20151105T1727',\n",
       "       'sp011-20160602T1624', 'sp011-20161130T1806',\n",
       "       'sp011-20171113T1837', 'sp011-20191212T1735',\n",
       "       'sp013-20180927T1717', 'sp013-20190919T1809',\n",
       "       'sp013-20200226T1848', 'sp013-20200910T1701',\n",
       "       'sp014-20180301T1819', 'sp018-20160218T0244',\n",
       "       'sp018-20180525T2315', 'sp020-20140802T1347',\n",
       "       'sp020-20151216T1259', 'sp024-20170130T2242',\n",
       "       'sp024-20181202T2344', 'sp025-20141125T1730',\n",
       "       'sp025-20150108T1921', 'sp025-20150813T1746',\n",
       "       'sp025-20160310T1858', 'sp025-20160913T1826',\n",
       "       'sp025-20170328T1708', 'sp025-20171012T1654',\n",
       "       'sp025-20180430T1727', 'sp025-20181203T1811',\n",
       "       'sp025-20190717T1748', 'sp026-20170419T2358',\n",
       "       'sp026-20190203T2219', 'sp027-20150615T2348',\n",
       "       'sp027-20171009T2217', 'sp027-20190915T2211',\n",
       "       'sp028-20141210T1741', 'sp028-20150716T2019',\n",
       "       'sp028-20151124T1741', 'sp028-20160628T1737',\n",
       "       'sp028-20160817T1725', 'sp028-20161214T1951',\n",
       "       'sp028-20170713T2055', 'sp028-20200626T1802',\n",
       "       'sp030-20140813T1713', 'sp030-20150109T2113',\n",
       "       'sp030-20150714T1840', 'sp030-20160218T1746',\n",
       "       'sp030-20160906T1907', 'sp030-20170405T1724',\n",
       "       'sp030-20171011T1719', 'sp030-20180508T1653',\n",
       "       'sp030-20190115T1927', 'sp030-20190815T1709',\n",
       "       'sp030-20200513T1702', 'sp031-20140405T1440',\n",
       "       'sp031-20150910T1442', 'sp031-20200121T0052',\n",
       "       'sp035-20150331T1646', 'sp035-20190815T1711',\n",
       "       'sp035-20200219T1918', 'sp036-20191009T0135',\n",
       "       'sp039-20150122T1750', 'sp039-20160218T1748',\n",
       "       'sp039-20170620T1714', 'sp039-20180816T1934',\n",
       "       'sp039-20191022T1943', 'sp040-20150409T1841',\n",
       "       'sp040-20180117T2223', 'sp040-20180816T1936',\n",
       "       'sp040-20190328T1804', 'sp040-20191022T1943',\n",
       "       'sp040-20200615T1810', 'sp041-20160908T1738',\n",
       "       'sp041-20180301T1817', 'sp041-20180927T1721',\n",
       "       'sp041-20190425T1708', 'sp041-20191205T1757',\n",
       "       'sp041-20200902T1709', 'sp042-20150318T2227',\n",
       "       'sp042-20161103T2310', 'sp042-20181011T2231',\n",
       "       'sp043-20140927T0018', 'sp043-20160519T2326',\n",
       "       'sp043-20180111T2120', 'sp043-20190712T2145',\n",
       "       'sp047-20140623T2230', 'sp047-20150827T1720',\n",
       "       'sp047-20170314T1701', 'sp047-20180508T1650',\n",
       "       'sp047-20180621T1608', 'sp047-20190708T1622',\n",
       "       'sp047-20200826T1831', 'sp048-20150127T1824',\n",
       "       'sp049-20160405T1844', 'sp049-20170518T1637',\n",
       "       'sp050-20150206T1231', 'sp050-20160330T1301',\n",
       "       'sp051-20141112T1933', 'sp052-20140814T1805',\n",
       "       'sp052-20150728T1703', 'sp052-20160906T1904',\n",
       "       'sp052-20180117T2226', 'sp052-20190326T1708',\n",
       "       'sp052-20200630T2154', 'sp053-20150828T2314',\n",
       "       'sp053-20160720T1210', 'sp054-20160317T1738',\n",
       "       'sp054-20171011T1721', 'sp054-20181207T1726',\n",
       "       'sp054-20200121T1754', 'sp055-20170314T1700',\n",
       "       'sp055-20170810T1832', 'sp055-20180619T1736',\n",
       "       'sp055-20190228T1734', 'sp055-20191003T1711',\n",
       "       'sp055-20200513T1700', 'sp056-20170329T1846',\n",
       "       'sp057-20170711T1834', 'sp057-20181207T1719',\n",
       "       'sp057-20190124T1724', 'sp058-20170628T1636',\n",
       "       'sp058-20180126T1753', 'sp058-20180823T1614',\n",
       "       'sp058-20190425T1707', 'sp058-20191114T1802',\n",
       "       'sp058-20200529T1700', 'sp063-20140915T1905',\n",
       "       'sp063-20160203T1915', 'sp063-20160823T1822',\n",
       "       'sp064-20151030T1759', 'sp064-20160517T1813',\n",
       "       'sp064-20161214T1913', 'sp064-20171113T1842',\n",
       "       'sp064-20180619T1733', 'sp064-20180823T1615',\n",
       "       'sp064-20190115T1926', 'sp064-20190620T1654',\n",
       "       'sp064-20200121T1759', 'sp064-20200826T1639',\n",
       "       'sp067-20190620T1649', 'sp018-20140605T001000',\n",
       "       'sp025-20140611T184300', 'sp028-20140605T170300',\n",
       "       'sp048-20140116T181300', 'sp029-20200722T2029',\n",
       "       'sp034-20170405T1712', 'sp034-20180514T1938',\n",
       "       'sp034-20200707T1802', 'sp034-20200903T1703',\n",
       "       'Reveille-20161207T2001', 'Stommel-20170120T2144',\n",
       "       'Stommel-20170627T1936', 'Howdy-20160629T2207',\n",
       "       'Revellie-20160629T1744', 'Howdy-20160902T1836',\n",
       "       'Sam-20170214T1609', 'Sam-20170516T1416', 'Sam-20160729T1659',\n",
       "       'Sam-20170103T1836', 'mote-genie-20161015T1513',\n",
       "       'mote-genie-20161212T1714', 'mote-genie-20170224T1732',\n",
       "       'mote-genie-20170404T1922', 'mote-genie-20170624T0128',\n",
       "       'bass-20200203T0000', 'UW130-20181107T0000', 'UW157-20141116T2118',\n",
       "       'ce_326-20151015T1908-delayed', 'ce_381-20141008T1820-delayed',\n",
       "       'ce_383-20150813T2011-delayed', 'roxy-20160914T2055',\n",
       "       'roxy-20161008T1900', 'UW130-20150309T2005', 'UW130-20160523T1828',\n",
       "       'UW130-20170605T1834', 'UW157-20150917T1833',\n",
       "       'UW157-20161021T1807', 'UW157-20180417T1832',\n",
       "       'Nemesis-20170412T0000', 'Nemesis-20170512T0000',\n",
       "       'Nemesis-20171115T0000', 'Nemesis-20180515T0000',\n",
       "       'Nemesis-20180830T0000', 'unit713-20180907T0000',\n",
       "       'UW130-20200615T0000', 'UW157-20190916T0000',\n",
       "       'UW157-20200917T0000', 'UW646-20190409T0000',\n",
       "       'UCSC260-20150520T0000', 'UCSC294-20150430T2218',\n",
       "       'ng222-20200908T1821', 'ng314-20200806T2040',\n",
       "       'ng428-20200729T2120', 'ng609-20200717T1224',\n",
       "       'ng645-20200730T1909', 'ng412-20200714T1210',\n",
       "       'ng357-20200704T0000', 'ng617-20200804T1442',\n",
       "       'ng619-20200722T1900', 'ng666-20200722T1657',\n",
       "       'ng618-20200910T1635', 'unit_092-20090517T1331',\n",
       "       'unit_092-20090610T1625', 'unit_092-20090723T1757',\n",
       "       'unit_092-20090901T1725', 'unit_092-20100416T2033',\n",
       "       'unit_092-20100512T1617', 'unit_092-20100708T1523',\n",
       "       'unit_092-20100830T2257', 'unit_092-20100929T1702',\n",
       "       'unit_092-20110412T2037', 'unit_092-20110620T1657',\n",
       "       'unit_092-20110722T1654', 'unit_092-20110901T0015',\n",
       "       'unit_251-20120725T1549', 'unit_251-20130508T1738',\n",
       "       'unit_251-20130718T1635', 'nokomis-20140903T1637-delayed',\n",
       "       'nokomis-20140912T1739-delayed', 'nokomis-20140925T1911-delayed',\n",
       "       'nokomis-20141030T1510-delayed', 'nokomis-20150701T1946-delayed',\n",
       "       'nokomis-20150714T1353-delayed', 'nokomis-20150921T1518-delayed',\n",
       "       'nokomis-20160603T1523-delayed', 'nokomis-20160627T1917-delayed',\n",
       "       'nokomis-20160824T1951-delayed', 'nokomis-20160912T2125-delayed',\n",
       "       'nokomis-20170620T1915-delayed', 'nokomis-20170714T2057-delayed',\n",
       "       'nokomis-20170819T1233-delayed', 'nokomis-20180510T1824-delayed',\n",
       "       'nokomis-20180523T1442-delayed', 'nokomis-20180727T1911-delayed',\n",
       "       'nokomis-20180828T2113-delayed', 'nokomis-20190808T1619-delayed',\n",
       "       'ng291-20180701T0000', 'ng300-20180701T0000',\n",
       "       'ng467-20180701T0000', 'ng487-20180701T0000',\n",
       "       'ng488-20180701T0000', 'glos_236-20190910T1517-delayed',\n",
       "       'ng289-20190901T0000', 'glos_236-20121002T2351-delayed',\n",
       "       'glos_236-20170621T1628-delayed', 'blue-20200819T1433',\n",
       "       'blue-20200925T1419', 'glos_236-20130629T0324-delayed',\n",
       "       'glos_236-20130731T1538-delayed', 'glos_236-20130807T1502-delayed',\n",
       "       'glos_236-20130927T1620-delayed', 'glos_236-20140519T1633-delayed',\n",
       "       'glos_236-20140725T1728-delayed', 'glos_236-20140918T1505-delayed',\n",
       "       'glos_236-20170912T1312-delayed', 'ng231-20190901T0000',\n",
       "       'ng278-20190901T0000', 'ng282-20190901T0000',\n",
       "       'ng302-20180701T0000', 'ng616-20180701T0000',\n",
       "       'ng617-20180701T0000', 'ng618-20180701T0000',\n",
       "       'ng618-20190901T0000', 'ng619-20180701T0000',\n",
       "       'ng619-20190901T0000', 'glos_236-20150619T1741-delayed',\n",
       "       'glos_236-20150805T1450-delayed', 'glos_236-20150921T1406-delayed',\n",
       "       'glos_236-20160622T1547-delayed', 'glos_236-20160812T1445-delayed',\n",
       "       'glos_236-20160920T1510-delayed', 'glos_236-20180418T1344-delayed',\n",
       "       'glos_236-20180726T1435-delayed', 'glos_236-20180907T1822-delayed',\n",
       "       'ng228-20180801T0000', 'ng230-20180801T0000',\n",
       "       'ng257-20180801T0000', 'ng258-20180801T0000',\n",
       "       'ng261-20180801T0000', 'ng279-20180801T0000',\n",
       "       'ng288-20180801T0000', 'ng290-20180701T0000',\n",
       "       'ng295-20180701T0000', 'ng296-20180701T0000',\n",
       "       'ng309-20180701T0000', 'ng342-20180701T0000',\n",
       "       'ng429-20180701T0000', 'ng448-20180701T0000',\n",
       "       'ng450-20180701T0000', 'ng464-20180701T0000',\n",
       "       'ng466-20180701T0000', 'ng489-20180701T0000',\n",
       "       'ng512-20180701T0000', 'ng596-20180701T0000',\n",
       "       'maracoos_01-20201006T1417', 'maracoos_01-20200820T1459',\n",
       "       'sylvia-20200903T1327', 'ud_134-20200731T2103',\n",
       "       'ru33-20191014T1643-delayed', 'ru22-20190820T1327-delayed',\n",
       "       'ru29-20200908T1623', 'ru34-20200729T1430', 'ru34-20201003T1821',\n",
       "       'amelia-20200825T1929', 'ru33-20200826T1604', 'blue-20160818T1448',\n",
       "       'blue-20170831T1436', 'ru30-20180502T1355', 'ru30-20180705T1825',\n",
       "       'ru30-20190201T1712', 'ru30-20190227T1625', 'ud_476-20180501T1640',\n",
       "       'ru25d-20171222T1251', 'ru26d-20171211T0920', 'ru31-20160322T1503',\n",
       "       'ud_134-20160830T1619', 'ru32-20180109T0531', 'ru33-20200715T1558',\n",
       "       'sbu01-20190716T1733', 'sbu01-20191014T1634', 'ru28-20190717T1522',\n",
       "       'ru30-20160901T1316', 'ru30-20190717T1812',\n",
       "       'whoi_406-20160902T1700', 'blue-20190815T1711',\n",
       "       'ru33-20180801T1323', 'ru30-20191015T1824', 'ru32-20170622T1508',\n",
       "       'amelia-20180501T0000', 'striper-20170907T1430',\n",
       "       'ru28-20160901T1305', 'ru28-20161003T1309', 'ru28-20170424T1310',\n",
       "       'ru28-20170915T1416', 'ru28-20171019T1322', 'ru28-20180501T1528',\n",
       "       'ru28-20180920T1334', 'ru28-20181023T1320', 'ru32-20160810T1309',\n",
       "       'ru28-20160714T1410', 'ud_476-20180116T1500',\n",
       "       'clark-20160624T1800', 'silbo-20160413T1534',\n",
       "       'silbo-20180525T1016', 'silbo-20190717T1917',\n",
       "       'ud_476-20181112T1258', 'ru22-20180815T0107',\n",
       "       'sylvia-20180802T0930', 'sylvia-20180501T0000',\n",
       "       'blue-20180806T1400', 'ru22-20161017T1303', 'ru28-20190926T1413',\n",
       "       'ru22-20190820T1327', 'blue-20191014T1359',\n",
       "       'pelagia-20180910T0000', 'ramses-20180907T0000',\n",
       "       'ud_134-20180427T1307', 'ud_134-20170825T1533',\n",
       "       'ce_311-20190703T1802', 'ce_312-20190822T1335',\n",
       "       'ce_311-20161011T2101-delayed', 'ce_311-20180510T1801-delayed',\n",
       "       'ce_312-20171207T2011-delayed', 'ce_312-20190822T1335-delayed',\n",
       "       'ce_319-20180510T1924-delayed', 'ce_319-20180824T1736-delayed',\n",
       "       'ce_320-20160616T2004-delayed', 'ce_320-20180503T1815-delayed',\n",
       "       'ce_326-20171218T1732-delayed', 'ce_327-20170825T1840-delayed',\n",
       "       'ce_327-20180705T1927-delayed', 'ce_327-20190125T2036-delayed',\n",
       "       'ce_381-20171208T1841-delayed', 'ce_382-20180907T0000-delayed',\n",
       "       'ce_382-20190125T2341-delayed', 'ce_382-20190515T1759-delayed',\n",
       "       'ce_384-20171208T1704-delayed', 'ce_386-20171009T1705-delayed',\n",
       "       'ce_386-20180306T2218-delayed', 'ce_386-20180619T2120-delayed',\n",
       "       'ce_386-20180920T0144-delayed', 'ud_134-20170621T1353',\n",
       "       'ud_134-20170725T1439', 'ru26d-20190905T1802',\n",
       "       'ce_319-20190125T2248-delayed', 'ce_383-20181101T1615-delayed',\n",
       "       'ce_383-20190125T2148-delayed', 'ru29-20180812T0220',\n",
       "       'ru29-20161105T0131', 'ru33-20191014T1643', 'ce_311-20191022T1342',\n",
       "       'ce_312-20191021T0557', 'ce_320-20191012T0448',\n",
       "       'ce_383-20200220T2031', 'ce_384-20190808T2105',\n",
       "       'ce_384-20200708T1545', 'ce_386-20191121T1807',\n",
       "       'ce_311-20160122T2045-delayed', 'ce_311-20170725T1930-delayed',\n",
       "       'ce_311-20190503T2243-delayed', 'ce_311-20191022T1342-delayed',\n",
       "       'ce_312-20160122T2140-delayed', 'ce_312-20160920T1743-delayed',\n",
       "       'ce_312-20170419T2040-delayed', 'ce_312-20191021T0557-delayed',\n",
       "       'ce_319-20160616T1912-delayed', 'ce_320-20170410T1745-delayed',\n",
       "       'ce_326-20170106T2101-delayed', 'ce_326-20170517T2018-delayed',\n",
       "       'ce_327-20160923T0147-delayed', 'ce_327-20161215T2058-delayed',\n",
       "       'ce_381-20170213T2030-delayed', 'ce_382-20160928T2102-delayed',\n",
       "       'ce_382-20170410T2230-delayed', 'ce_383-20160506T2058-delayed',\n",
       "       'ce_383-20170131T1942-delayed', 'ce_383-20170719T1900-delayed',\n",
       "       'ce_383-20200220T2031-delayed', 'ce_384-20160507T2355-delayed',\n",
       "       'ce_384-20170420T0137-delayed', 'ce_386-20160922T2355-delayed',\n",
       "       'ce_386-20170627T2124-delayed', 'ru29-20190906T1535',\n",
       "       'sam-20180824T0000', 'angus-20190522T0000', 'angus-20191101T0000',\n",
       "       'bios_minnie-20190308T1859', 'bios_minnie-20191021T1613',\n",
       "       'franklin-20190522T0000', 'franklin-20190910T0000',\n",
       "       'ru29-20191010T1932', 'pelagia-20180401T0000',\n",
       "       'bios_anna-20190910T1844', 'bios_anna-20190628T1722',\n",
       "       'bios_jack-20170920T1928', 'bios_jack-20171103T1744',\n",
       "       'bios_anna-20180112T0455', 'bios_jack-20190620T2015',\n",
       "       'bios_jack-20190725T1346', 'bios_jack-20190917T0241',\n",
       "       'bios_jack-20191116T1452', 'bios_jack-20191216T1620',\n",
       "       'bass-20160909T1733', 'bass-20180301T0000', 'bass-20180808T0000',\n",
       "       'bios_minnie-20170616T1454', 'bios_minnie-20171212T2052',\n",
       "       'bios_minnie-20180523T1617', 'ce_247-20160928T2157-delayed',\n",
       "       'sam-20190909T0000', 'ramses-20160909T2028',\n",
       "       'ramses-20180704T0000', 'salacia-20160919T2028',\n",
       "       'ce_386-20161215T1736-delayed', 'modena-20160909T1758',\n",
       "       'Stommel-20170727T1845', 'Sverdrup-20170902T1930',\n",
       "       'mote-genie-20170901T1757', 'mote-genie-20171027T2222',\n",
       "       'ce_311-20141006T2340-delayed', 'ce_312-20140420T2320-delayed',\n",
       "       'ce_319-20140807T1935-delayed', 'ce_320-20141007T0100-delayed',\n",
       "       'ce_326-20150410T1941-delayed', 'ce_327-20150603T1840-delayed',\n",
       "       'ce_327-20151015T1701-delayed', 'ce_382-20150121T2113-delayed',\n",
       "       'ce_383-20150121T2015-delayed', 'ce_384-20150411T1813-delayed',\n",
       "       'ce_384-20150821T2015-delayed', 'ce_386-20140420T1947-delayed',\n",
       "       'ce_386-20150404T1729-delayed', 'ce_386-20151011T2247-delayed',\n",
       "       'Reveille-20170925T0946', 'ru22-20191014T1645'], dtype=object)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from gliderpy.fetchers import DatasetList\n",
    "\n",
    "datasets = DatasetList()\n",
    "ds_ids = datasets.get_ids()\n",
    "\n",
    "print(f\"found {len(ds_ids)} glider datasets on the server {datasets.e.server}\")\n",
    "ds_ids"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The user can supply their own list of search terms. Let's look for datasets from UW"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-08T16:40:33.630433Z",
     "iopub.status.busy": "2020-10-08T16:40:33.629902Z",
     "iopub.status.idle": "2020-10-08T16:40:33.802883Z",
     "shell.execute_reply": "2020-10-08T16:40:33.802527Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "found 21 datasets matching the search terms on the server https://gliders.ioos.us/erddap\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array(['UW130-20150309T2005', 'UW130-20160523T1828',\n",
       "       'UW130-20170605T1834', 'UW130-20181107T0000',\n",
       "       'UW130-20200615T0000', 'UW157-20141116T2118',\n",
       "       'UW157-20150917T1833', 'UW157-20161021T1807',\n",
       "       'UW157-20180417T1832', 'UW157-20190916T0000',\n",
       "       'UW157-20200917T0000', 'UW646-20190409T0000',\n",
       "       'unit_191-20160710T2018', 'unit_595-20170713T1730-delayed',\n",
       "       'nokomis-20140912T1739-delayed', 'nokomis-20180727T1911-delayed',\n",
       "       'SG187-20110430T1450', 'SG108-20130923T1728',\n",
       "       'SG187-20100716T1208', 'SG187-20140625T1330',\n",
       "       'SG187-20120912T1125'], dtype=object)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "uw_glider_ids = datasets.get_ids(search_terms=(\"UW\",))\n",
    "\n",
    "print(\n",
    "    f\"found {len(uw_glider_ids)} datasets matching the search terms on the server {datasets.e.server}\"\n",
    ")\n",
    "\n",
    "uw_glider_ids"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, a combined search for datasets from UW or Scripps"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-08T16:40:33.812844Z",
     "iopub.status.busy": "2020-10-08T16:40:33.806420Z",
     "iopub.status.idle": "2020-10-08T16:40:34.104538Z",
     "shell.execute_reply": "2020-10-08T16:40:34.104079Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "found 211 datasets matching the search terms on the server https://gliders.ioos.us/erddap\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array(['UW130-20150309T2005', 'UW130-20160523T1828',\n",
       "       'UW130-20170605T1834', 'UW130-20181107T0000',\n",
       "       'UW130-20200615T0000', 'UW157-20141116T2118',\n",
       "       'UW157-20150917T1833', 'UW157-20161021T1807',\n",
       "       'UW157-20180417T1832', 'UW157-20190916T0000',\n",
       "       'UW157-20200917T0000', 'UW646-20190409T0000',\n",
       "       'unit_191-20160710T2018', 'unit_595-20170713T1730-delayed',\n",
       "       'nokomis-20140912T1739-delayed', 'nokomis-20180727T1911-delayed',\n",
       "       'SG187-20110430T1450', 'SG108-20130923T1728',\n",
       "       'SG187-20100716T1208', 'SG187-20140625T1330',\n",
       "       'SG187-20120912T1125', 'sp001-20150111T2247',\n",
       "       'sp001-20160814T2313', 'sp001-20180715T0125',\n",
       "       'sp001-20191027T2329', 'sp006-20151214T0021',\n",
       "       'sp006-20170714T0047', 'sp006-20190204T0038',\n",
       "       'sp011-20140501T0000', 'sp011-20140923T0000',\n",
       "       'sp011-20150427T1749', 'sp011-20151105T1727',\n",
       "       'sp011-20160602T1624', 'sp011-20161130T1806',\n",
       "       'sp011-20171113T1837', 'sp011-20191212T1735',\n",
       "       'sp013-20180927T1717', 'sp013-20190919T1809',\n",
       "       'sp013-20200226T1848', 'sp013-20200910T1701',\n",
       "       'sp014-20180301T1819', 'sp018-20140605T001000',\n",
       "       'sp018-20160218T0244', 'sp018-20180525T2315',\n",
       "       'sp020-20140802T1347', 'sp020-20151216T1259',\n",
       "       'sp024-20170130T2242', 'sp024-20181202T2344',\n",
       "       'sp025-20140611T184300', 'sp025-20141125T1730',\n",
       "       'sp025-20150108T1921', 'sp025-20150813T1746',\n",
       "       'sp025-20160310T1858', 'sp025-20160913T1826',\n",
       "       'sp025-20170328T1708', 'sp025-20171012T1654',\n",
       "       'sp025-20180430T1727', 'sp025-20181203T1811',\n",
       "       'sp025-20190717T1748', 'sp026-20170419T2358',\n",
       "       'sp026-20190203T2219', 'sp027-20150615T2348',\n",
       "       'sp027-20171009T2217', 'sp027-20190915T2211',\n",
       "       'sp028-20140605T170300', 'sp028-20141210T1741',\n",
       "       'sp028-20150716T2019', 'sp028-20151124T1741',\n",
       "       'sp028-20160628T1737', 'sp028-20160817T1725',\n",
       "       'sp028-20161214T1951', 'sp028-20170713T2055',\n",
       "       'sp028-20200626T1802', 'sp030-20140813T1713',\n",
       "       'sp030-20150109T2113', 'sp030-20150714T1840',\n",
       "       'sp030-20160218T1746', 'sp030-20160906T1907',\n",
       "       'sp030-20170405T1724', 'sp030-20171011T1719',\n",
       "       'sp030-20180508T1653', 'sp030-20190115T1927',\n",
       "       'sp030-20190815T1709', 'sp030-20200513T1702',\n",
       "       'sp031-20140405T1440', 'sp031-20150910T1442',\n",
       "       'sp031-20200121T0052', 'sp035-20150331T1646',\n",
       "       'sp035-20190815T1711', 'sp035-20200219T1918',\n",
       "       'sp036-20191009T0135', 'sp039-20150122T1750',\n",
       "       'sp039-20160218T1748', 'sp039-20170620T1714',\n",
       "       'sp039-20180816T1934', 'sp039-20191022T1943',\n",
       "       'sp040-20150409T1841', 'sp040-20180117T2223',\n",
       "       'sp040-20180816T1936', 'sp040-20190328T1804',\n",
       "       'sp040-20191022T1943', 'sp040-20200615T1810',\n",
       "       'sp041-20160908T1738', 'sp041-20180301T1817',\n",
       "       'sp041-20180927T1721', 'sp041-20190425T1708',\n",
       "       'sp041-20191205T1757', 'sp041-20200902T1709',\n",
       "       'sp042-20150318T2227', 'sp042-20161103T2310',\n",
       "       'sp042-20181011T2231', 'sp043-20140927T0018',\n",
       "       'sp043-20160519T2326', 'sp043-20180111T2120',\n",
       "       'sp043-20190712T2145', 'sp047-20140623T2230',\n",
       "       'sp047-20150827T1720', 'sp047-20170314T1701',\n",
       "       'sp047-20180508T1650', 'sp047-20180621T1608',\n",
       "       'sp047-20190708T1622', 'sp047-20200826T1831',\n",
       "       'sp048-20140116T181300', 'sp048-20150127T1824',\n",
       "       'sp049-20160405T1844', 'sp049-20170518T1637',\n",
       "       'sp050-20150206T1231', 'sp050-20160330T1301',\n",
       "       'sp051-20141112T1933', 'sp052-20140814T1805',\n",
       "       'sp052-20150728T1703', 'sp052-20160906T1904',\n",
       "       'sp052-20180117T2226', 'sp052-20190326T1708',\n",
       "       'sp052-20200630T2154', 'sp053-20150828T2314',\n",
       "       'sp053-20160720T1210', 'sp054-20160317T1738',\n",
       "       'sp054-20171011T1721', 'sp054-20181207T1726',\n",
       "       'sp054-20200121T1754', 'sp055-20170314T1700',\n",
       "       'sp055-20170810T1832', 'sp055-20180619T1736',\n",
       "       'sp055-20190228T1734', 'sp055-20191003T1711',\n",
       "       'sp055-20200513T1700', 'sp056-20170329T1846',\n",
       "       'sp057-20170711T1834', 'sp057-20181207T1719',\n",
       "       'sp057-20190124T1724', 'sp058-20170628T1636',\n",
       "       'sp058-20180126T1753', 'sp058-20180823T1614',\n",
       "       'sp058-20190425T1707', 'sp058-20191114T1802',\n",
       "       'sp058-20200529T1700', 'sp063-20140915T1905',\n",
       "       'sp063-20160203T1915', 'sp063-20160823T1822',\n",
       "       'sp064-20151030T1759', 'sp064-20160517T1813',\n",
       "       'sp064-20161214T1913', 'sp064-20171113T1842',\n",
       "       'sp064-20180619T1733', 'sp064-20180823T1615',\n",
       "       'sp064-20190115T1926', 'sp064-20190620T1654',\n",
       "       'sp064-20200121T1759', 'sp064-20200826T1639',\n",
       "       'sp067-20190620T1649', 'sp010-20150409T1524',\n",
       "       'sp055-20150716T1359', 'sp065-20151001T1507',\n",
       "       'sp066-20151217T1624', 'sp066-20160818T1505',\n",
       "       'sp007-20170427T1652', 'sp007-20200618T1527',\n",
       "       'sp010-20170707T1647', 'sp010-20180620T1455',\n",
       "       'sp022-20170209T1616', 'sp022-20180124T1514',\n",
       "       'sp022-20180912T1553', 'sp062-20171116T1557',\n",
       "       'sp062-20200227T1647', 'sp062-20200824T1618',\n",
       "       'sp065-20200506T1709', 'sp066-20171129T1616',\n",
       "       'sp066-20200123T1630', 'sp066-20200824T1631',\n",
       "       'sp069-20170907T1531', 'sp069-20180411T1516',\n",
       "       'sp069-20181109T1607', 'sp069-20200319T1317',\n",
       "       'sp022-20170802T1414', 'sp022-20180422T1229',\n",
       "       'sp062-20190201T1350', 'sp034-20170405T1712',\n",
       "       'sp034-20180514T1938', 'sp065-20190517T1530',\n",
       "       'sp065-20191120T1543', 'sp066-20190301T1640',\n",
       "       'sp066-20190724T1532', 'sp062-20190925T1538',\n",
       "       'sp065-20180310T1828', 'sp065-20181015T1349',\n",
       "       'sp066-20170416T1744', 'sp066-20180629T1411',\n",
       "       'sp029-20200722T2029', 'sp034-20200707T1802',\n",
       "       'sp034-20200903T1703'], dtype=object)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combi_ids = datasets.get_ids(search_terms=[\"UW\", \"Scripps\"])\n",
    "\n",
    "print(\n",
    "    f\"found {len(combi_ids)} datasets matching the search terms on the server {datasets.e.server}\"\n",
    ")\n",
    "\n",
    "combi_ids"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
